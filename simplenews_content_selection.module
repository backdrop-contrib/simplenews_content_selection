<?php

/**
 * @file
 * General hooks and commonly-used functions
 */

/**
 * Implements hook_menu().
 */
function simplenews_content_selection_menu() {
  $items = array();

  $items['admin/config/services/simplenews/settings/simplenews_content_selection'] = array(
    'title' => 'Simplenews Content Selection',
    'description' => 'Configure what node types could be used for SCS',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('simplenews_content_selection_admin_settings_form'),
    'access arguments' => array('administer simplenews_content_selection'),
    'file' => 'simplenews_content_selection.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function simplenews_content_selection_permission() {
  return array(
    'administer simplenews_content_selection' => array(
      'title' => t('Administer Simplenews Content Selection'),
      'description' => t('User can perform administrative tasks like changing view mode and newsletter content type.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function simplenews_content_selection_theme() {
  return array(
    'simplenews_content_selection_sortable_table' => array(
      'render element' => 'form',
      'file' => 'simplenews_content_selection.theme.inc',
    ),
    'simplenews_content_selection_newsletter' => array(
      'variables' => array('nodes' => array(), 'toc' => FALSE),
      'template' => 'templates/simplenews-content-selection-newsletter',
      'file' => 'simplenews_content_selection.theme.inc',
    ),
    'simplenews_content_selection_toc' => array(
      'variables' => array('nodes' => array()),
      'file' => 'simplenews_content_selection.theme.inc',
    ),
  );
}

/**
 * Implements hook_entity_info().
 */
function simplenews_content_selection_entity_info_alter(&$info) {
  $info['node']['view modes']['simplenews_content_selection'] = array(
    'label' => t('Simplenews Content Selection'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_config_info().
 */
function simplenews_content_selection_config_info() {
  $prefixes['simplenews_content_selection.settings'] = array(
    'label' => t('Simplenews Content Selection settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
// function simplenews_content_selection_form_node_admin_content_alter(&$form, &$form_state) {
//   // Add an extra multistep operation to admin/content/node
//   if (isset($form_state['values']['operation']) && $form_state['values']['operation'] == 'simplenews_content_selection_create') {
//     unset($form['filter']);
//     unset($form['admin']);

//     backdrop_set_title(t('Sort nodes'));

//     // Show the sorting form + ToC checkbox
//     $form = array_merge($form, simplenews_content_selection_node_sort_form($form, $form_state));
//     $form['#submit'][] = 'simplenews_content_selection_node_sort_submit';

//     // Redirect to the simplenews node form
//     $type = strtr(config_get('simplenews_content_selection.settings', 'simplenews_content_selection_node_type'), '_', '-');
//     $form['#action'] = url('node/add/' . $type);
//   }
// }

/**
 * Implements hook_form_FORM_ID_alter().
 */
function simplenews_content_selection_form_node_form_alter(&$form, &$form_state) {
  // Check that we are creating a newsletter and that we come from the
  // admin/content/node
  if (in_array($form['type']['#value'], simplenews_get_content_types())
     && $form_state['input']['op'] = t('Next')
       && isset($form_state['input']['nodes'])
  ) {
    $nodes = node_load_multiple(array_keys($form_state['input']['nodes']));
    foreach ($nodes as $node) {
      $node->simplenews_content_selection_view_mode = $form_state['input']['nodes'][$node->nid]['view_mode'];
    }
    $form['body'][LANGUAGE_NONE][0]['#default_value'] = theme('simplenews_content_selection_newsletter', array(
      'nodes' => $nodes,
      'toc' => empty($form_state['input']['simplenews_content_selection_toc'])?FALSE : TRUE,
    ));
  }
}

/**
 * Form callback: second step of the selection form, sorting nodes
 */
function simplenews_content_selection_node_sort_form($form, &$form_state) {
  $nodes = array_filter($form_state['values']['nodes']);

  // Checkbox for Table of contents
  $form['simplenews_content_selection_toc'] = array(
    '#type' => 'checkbox',
    '#title' => t('Create a table of contents'),
    '#description' => t('Create a table of contents at top of the newsletter with the titles of the selected nodes. If newsletter is HTML format, these table of contents will be bookmarks.'),
  );

  // Create elements for the tablesort
  $form['nodes']['#tree'] = TRUE;
  foreach ($nodes as $nid) {
    $form['nodes'][$nid]['weight'] = array(
      '#type' => 'weight',
      '#attributes' => array('class' => array('node-weight')),
    );

    $form['nodes'][$nid]['view_mode'] = array(
      '#type' => 'select',
      '#options' => simplenews_content_selection_view_mode_options(),
    );
  }
  $form['#theme'] = 'simplenews_content_selection_sortable_table';

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Create newsletter'),
  );

  return $form;
}

/**
 * Form callback: submit handler for sorting nodes
 */
function simplenews_content_selection_node_sort_submit(&$form, &$form_state) {
  backdrop_sort($form_state['values']['nodes']);
//  uasort($form_state['values']['nodes'], 'backdrop_sort_weight');
}

/**
 * Put together a option list based on selected view modes
 */
function simplenews_content_selection_view_mode_options() {
  $entity_info = entity_get_info();
  $view_modes = array_filter(config_get('simplenews_content_selection.settings', 'simplenews_content_selection_view_mode'));

  $options = array();
  foreach ($view_modes as $machine_name => $status) {
    if ($status) {
      $options[$machine_name] = $entity_info['node']['view modes'][$machine_name]['label'];
    }
  }
  return $options;
}

/**
 * Implements hook_vboaction_info().
 *
 * Registers custom VBO actions.
 */
/**
 * Implements hook_action_info().
 */
function simplenews_content_selection_vboaction_info() {
  return array(
    'simplenews_content_selection_create_newsletter_action' => array(
      'type' => 'node',
      'label' => t('Create newsletter'),
      'configurable' => TRUE,
      'behavior' => array('simplenews_content_selection_views_create_newsletter'),
      'vbo' => TRUE,
    ),
  );
}

/**
 * Configuration form for tis action. Not used as form, but used as a step to go to the node sorter.
 */
function simplenews_content_selection_create_newsletter_action_form($context, $form_state) {
  // Emulate the nodes submitted from admin/content/node
  $form_state['values']['nodes'] = $form_state['selection'];

  backdrop_set_title(t('Sort nodes'));

  $form = array(
    '#submit' => array('simplenews_content_selection_node_sort_submit'),
  );
  return simplenews_content_selection_node_sort_form($form, $form_state);
}

/**
 * Get the selected nodes and create a newsletter from it
 */
function simplenews_content_selection_create_newsletter_action_submit($form, $form_state) {
  simplenews_content_selection_node_sort_submit($form, $form_state);
}

/**
 * Implements hook_form_alter().
 */
function simplenews_content_selection_form_alter(&$form, &$form_state) {
  if (isset($form_state['step']) && $form_state['step'] == 'views_bulk_operations_config_form') {
    $operation = $form_state['operation'];
    if ($operation->id() == 'action::simplenews_content_selection_create_newsletter_action') {
      // Hack into VBO process to redirect to the simplenews node form
      $node_type = config_get('simplenews_content_selection.settings', 'simplenews_content_selection_node_type');
      $form['#action'] = url('node/add/' . $node_type);
    }
  }
}

/**
 * Implements hook_views_api().
 */
function simplenews_content_selection_views_api() {
  return array(
    'api' => 3,
  );
}
